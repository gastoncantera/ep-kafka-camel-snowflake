[Kafka]
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic snowflake-topic --partitions 3 --replication-factor 3

[Camel]
from("kafka:snowflake-topic?brokers=localhost:9092")

[Snowflake Streaming]
openssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048
{ "private_key": "${grep -v PRIVATE private_key.pem | tr -d '\n'}" }

[Snowflake]
openssl rsa -pubout -in private_key.pem -out public_key.pem
ALTER USER test SET RSA_PUBLICKEY = '${grep -v KEY public_key.pem | tr -d '\n'}'
CREATE OR REPLACE TABLE test.public."kafka-streaming" (
    RECORD_CONTENT VARIANT,
    RECORD_METADATA VARIANT
);

------------------------------------------------------------------------------------------------------------------------

kafka-console-producer.sh --bootstrap-server localhost:9092 --topic snowflake-topic
{ "event": "page_view", "page": "homepage", "user_id": "23049834" }

SELECT TOP 10
    RECORD_METADATA:"ep-kafka-camel-snowflake.source" AS SOURCE,
    RECORD_CONTENT
FROM test.public."kafka-streaming"
ORDER BY SOURCE;

SELECT
    RECORD_METADATA:"ep-kafka-camel-snowflake.source" AS SOURCE,
    COUNT(RECORD_CONTENT)
FROM test.public."kafka-streaming"
GROUP BY RECORD_METADATA:"ep-kafka-camel-snowflake.source"